name: CICD

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create .env file
        run: |
          touch .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "NAVER_ID=${{ secrets.NAVER_ID }}" >> .env
          echo "NAVER_SECRET=${{ secrets.NAVER_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env

      - name: Install dependencies
        run: npm install

      # - name: delete nodeModules
      #   run: npm prune --production
      - name: Build the application
        run: npm run build

      - name: Sign in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
          --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --build-arg GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
          --build-arg GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
          --build-arg NAVER_ID=${{ secrets.NAVER_ID }} \
          --build-arg NAVER_SECRET=${{ secrets.NAVER_SECRET }} \
          --build-arg NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} \
          --build-arg NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} \
          --no-cache --progress=plain -t hangakim/keyword_finder .
        # run: docker build --no-cache --progress=plain -t hangakim/keyword_finder .

      - name: Push Docker Image
        run: docker push hangakim/keyword_finder:latest

  deploy:
    needs: build
    runs-on: aws-kf
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          touch .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "NAVER_ID=${{ secrets.NAVER_ID }}" >> .env
          echo "NAVER_SECRET=${{ secrets.NAVER_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env

      - name: Pull image from docker hub
        run: docker pull hangakim/keyword_finder:latest

      # - name: Delete existing container
      #   run: docker rm -f kfContainer || true

      # - name: Run container
      # run: docker run -d -p 80:80 --name kfContainer --env-file .env hangakim/keyword_finder:latest
      # run: docker run -d -p 3000:80 --name kfContainer --env-file .env hangakim/keyword_finder:latest
      - name: Deploy with Docker Compose
        run: docker-compose --env-file ./.env up -d

        # run: docker-compose up -d
