name: CICD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Build the application
      run: npm run build

    - name: Create .env file
      run: |
        touch .env
        echo "${{ secrets.PRODUCTION_ENV_SECRET }}" > .env
    
    - name: Sign in to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build Docker Image
      run: docker build -t HangA-Kim/keyword_finder_public .
      
    - name: Push Docker Image
      run: docker push HangA-Kim/keyword_finder_public:latest
    
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Pull image from docker hub
      run: docker pull HangA-Kim/keyword_finder_public:latest
        
    - name: Delete existing container
      run: docker rm -f reactContainer || true  # if no container exists, don't fail
        
    - name: Run container
      run: docker run -d -p 80:80 --name reactContainer HangA-Kim/keyword_finder_public
